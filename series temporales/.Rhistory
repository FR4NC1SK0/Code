pib
pib <- ts(pib[,4], start = c(2002,1),end = c(2025,1), frequency = 12)
pib
ipi_tri<-aggregate(ipi, nfrequency=4,mean)
pib_tri<-aggregate(pib, nfrequency=4,mean)
ipi_tri
pib_tri
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
pib <- pib %>% filter(codtempo>200200)
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1),end = c(2025,4), frequency = 12)
pib_tri<-aggregate(pib, nfrequency=4,mean)
pib_tri
cor(ipi_tri,pib_tri)
plot(pib_tri)
plot(ipi_tri)
plot(pib_tri)
plot(ipi_tri)
plot(pib)
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
plot(pib)
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1),end = c(2025,4), frequency = 12)
plot(pib)
plot(ipi)
plot(ipi_tri)
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1), frequency = 12)
plot(pib)
View(pib)
pib_tri<-aggregate(pib, nfrequency=4,mean)
plot(pib_tri)
cor(ipi_tri,pib_tri)
ipi_tri<-aggregate(ipi, nfrequency=4,mean)
pib_tri<-aggregate(pib, nfrequency=4,mean)
ipi_tri
pib_tri
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1), frequency = 12)
pib
pib
View(pib)
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
pib
pib <- pib %>% filter(codtempo>200200)
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1),end=c(2025,4), frequency = 12)
pib <- ts(pib[,4], start = c(2002,1),end=c(2025,4), frequency = 12)
pib <- ts(pib[,4], start = c(2002,1),end=c(2025,4), frequency = 12)
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1),end=c(2025,4), frequency = 4)
pib
ipi_tri<-aggregate(ipi, nfrequency=4,mean)
pib_tri<-aggregate(pib, nfrequency=4,mean)
ipi_tri
pib_tri
cor(ipi_tri,pib_tri)
ipi <- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/IPI21XE', encoding = 'latin1')
pib<- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/EXPRE24CONBR')
pib <- pib %>% filter(codtempo>200200)
pib <- pib %>% filter(codtempo>200200)
pib <- ts(pib[,4], start = c(2002,1),end=c(2025,1), frequency = 4)
ipi <-ts(ipi[,4], start = c(2002,1),frequency = 12)
ipi
pib
ipi_tri<-aggregate(ipi, nfrequency=4,mean)
ipi_tri<-aggregate(ipi, nfrequency=4,mean)
pib_tri<-aggregate(pib, nfrequency=4,mean)
ipi_tri
pib_tri
cor(ipi_tri,pib_tri)
plot(pib_tri)
plot(ipi_tri)
cor(ipi_tri,pib_tri)
plot(pib_tri)
plot(ipi_tri)
plot(pib)
plot(ipi)
ccf(ipi_tri,pib_tri)
ccf(ipi_tri,pib_tri)
plot(pib_tri)
plot(ipi_tri)
plot(pib)
plot(ipi)
plot(y)
set.seed(1234)
y <- arima.sim(list(ar=c(0.4), ma=c(0.25)), n=400)
est_y <- arima(y, order=c(1,0,1))
est_y_bis <- arima(y, order=c(2,0,1))
library(forecast)
forecast(est_y)
plot(y)
library(forecast)
forecast(est_y)
plot(y, est_y)
forec=forecast(est_y)
plot(y, forec)
forec=ts(forecast(est_y))
library(forecast)
forec=ts(forecast(est_y))
par(mfrow=c(2,1))
plot(y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(2,1))
plot(y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2))
plot(y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2))
plot(y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2))
plot(est_y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2))
plot(y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2.3))
plot(y)
plot(forec)
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2,3))
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2))
plot(y)
plot(forec)
forec
library(forecast)
forec=forecast(est_y)
par(mfrow=c(1,2))
rm(list=ls())
rm(list=ls())
library(lmtest)
library(tidyr)
# PIB: datos brutos, ciclotendencia e correxidos de estacionalidade
pib <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/PIBRE24CORRBR/PIBRE24CORRCT/PIBRE24CORRSA")
pib<-pivot_wider(pib,names_from='serie',values_from='dato')
pib <- ts(pib[,3:5], start=c(1995,1), frequency=4)
# vemos como son os nomes das series e cambianse
colnames(pib)
colnames(pib)<-c("datos_br","ciclo_tend","datos_sa")
# IPI: Índice xeral. Base 2021  (mensual):
ipi <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/IPI21XE/IPI21XE%26ZZA/IPI21XE%26ZZT")
ipi<-pivot_wider(ipi,names_from='serie',values_from = 'dato')
ipi <- ts(ipi[,3:5], start=c(2002,1), frequency=12)
# calculase a media trimestral
ipi <- aggregate(ipi, nfrequency=4, mean)
# vemos como son os nomes das series e cambianse
colnames(ipi)
colnames(ipi)<-c("datos_br","datos_sa","ciclo_tend")
# período común
start(pib)
end(pib)
start(ipi)
end(ipi)
# período común: filtramos pib dende o 2002
pib<-window(pib,start=2002)
library(lmtest)
plot(pib)
plot(ipi)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=1)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=2)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=3)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=4)
?grangertest
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=1)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=2)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=3)
grangertest(ipi[,"datos_br"], pib[,"datos_br"], order=4)
?grangertest
grangertest(ipi[,"ciclo_tend"], pib[,"ciclo_tend"], order=1)
grangertest(ipi[,"ciclo_tend"], pib[,"ciclo_tend"], order=2)
grangertest(ipi[,"ciclo_tend"], pib[,"ciclo_tend"], order=3)
grangertest(ipi[,"ciclo_tend"], pib[,"ciclo_tend"], order=4)
grangertest(ipi[,"datos_sa"], pib[,"datos_sa"], order=1)
grangertest(ipi[,"datos_sa"], pib[,"datos_sa"], order=2)
grangertest(ipi[,"datos_sa"], pib[,"datos_sa"], order=3)
veb <- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA)
d
d
veb <- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA')
View(veb)
veb <- pivot_wider(veb, names_from = 'serie', values_from = 'dato)
veb <- pivot_wider(veb, names_from = 'serie', values_from = 'dato')
veb <- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA')
veb <- pivot_wider(veb, names_from = 'serie', values_from = 'dato')
View(veb)
grangertest(ipi[,"datos_sa"], veb[,"VEB1002CORBR"], order=1)
grangertest(ipi[,"datos_sa"], pib[,"datos_sa"], order=1)
colnames(veb)
grangertest(ipi[,"datos_sa"], veb[,"VEB1002CORBR"], order=1)
View(veb)
View(ipi)
ipi <- window(ipi, end=2019)
grangertest(ipi[,"datos_sa"], veb[,"VEB1002CORBR"], order=1)
View(ipi)
# IPI: Índice xeral. Base 2021  (mensual):
ipi <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/IPI21XE/IPI21XE%26ZZA/IPI21XE%26ZZT")
View(ipi)
ipi <- ts(ipi[,3:5], start=c(2002,1), frequency=12)
ipi<-pivot_wider(ipi,names_from='serie',values_from = 'dato')
ipi <- ts(ipi[,3:5], start=c(2002,1), frequency=12)
# calculase a media trimestral
ipi <- aggregate(ipi, nfrequency=4, mean)
# vemos como son os nomes das series e cambianse
colnames(ipi)
colnames(ipi)<-c("datos_br","datos_sa","ciclo_tend")
# IPI: Índice xeral. Base 2021  (mensual):
ipi <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/IPI21XE/IPI21XE%26ZZA/IPI21XE%26ZZT")
ipi<-pivot_wider(ipi,names_from='serie',values_from = 'dato')
ipi<-pivot_wider(ipi,names_from='serie',values_from = 'dato')
# calculase a media trimestral
ipi <- aggregate(ipi, nfrequency=4, mean)
# vemos como son os nomes das series e cambianse
colnames(ipi)
colnames(ipi)<-c("datos_br","datos_sa","ciclo_tend")
ipi2 <- window(ipi, end= 2019)
ipi <- ts(ipi)
View(ipi)
# IPI: Índice xeral. Base 2021  (mensual):
ipi <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/IPI21XE/IPI21XE%26ZZA/IPI21XE%26ZZT")
ipi<-pivot_wider(ipi,names_from='serie',values_from = 'dato')
ipi <- ts(ipi[,3:5], start=c(2002,1), frequency=12)
# calculase a media trimestral
ipi <- aggregate(ipi, nfrequency=4, mean)
ipi2 <- ts(ipi, start=c(2002,1), end=c(2019,3))
ipi2
colnames(ipi2)<-c("datos_br","datos_sa","ciclo_tend")
ipi2 <- ts(ipi, start=c(2002,1), end=c(2019,3), frequency = 4)
colnames(ipi2)<-c("datos_br","datos_sa","ciclo_tend")
ipi2
veb <- ts(veb, start = c(2002,1), frequency = 4)
grangertest(ipi[,"datos_sa"], veb[,"VEB1002CORBR"], order=1)
colnames(ipi2)<-c("datos_br","datos_sa","ciclo_tend")
grangertest(ipi[,"datos_sa"], veb[,"VEB1002CORBR"], order=1)
grangertest(ipi2[,"datos_sa"], veb[,"VEB1002CORBR"], order=1)
ipi2
pib2<-read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA')
colnames(pib2)
pib2<- pib2 %>% pivot_wider(names_from='serie', values_from = 'dato')
colnames(pib2)
grangertest(ipi2[,"datos_sa"], pib2[,"bruto"], order=1)
colnames(pib2) <- c('bruto','ciclo','nosta')
grangertest(ipi2[,"datos_sa"], pib2[,"bruto"], order=1)
grangertest(ipi2[,"datos_sa"], pib2[,"ciclo"], order=2)
grangertest(ipi2[,"datos_sa"], pib2[,"nosta"], order=3)
View(ipi2)
View(pib2)
pib2<-ts(pib2,start=c(2002,1),frequency = 4)
grangertest(ipi2[,"datos_sa"], pib2[,"bruto"], order=1)
grangertest(ipi2[,"datos_sa"], pib2[,"ciclo"], order=2)
grangertest(ipi2[,"datos_sa"], pib2[,"nosta"], order=3)
grangertest(ipi2[,"datos_sa"], pib2[,"ciclo"], order=2)
pib2<-read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA')
pib2<-ts(pib2,start=c(2002,1),frequency = 4)
pib2<- pib2 %>% pivot_wider(names_from='serie', values_from = 'dato')
pib2<-read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA')
pib2<- pib2 %>% pivot_wider(names_from='serie', values_from = 'dato')
pib2<-ts(pib2,start=c(2002,1),frequency = 4)
colnames(pi2)
colnames(pib2)
pib2 <- pib2 %>% filter("VEB1002CORBR", "VEB1002CORCT", "VEB1002CORSA")
pib2 <- pib2 %>% filter(c("VEB1002CORBR", "VEB1002CORCT", "VEB1002CORSA"))
pib2 <- filter(pib2,"VEB1002CORBR", "VEB1002CORCT", "VEB1002CORSA")
?filter
pib2 <- select(pib2,"VEB1002CORBR", "VEB1002CORCT", "VEB1002CORSA")
library(tidyverse)
pib2 <- select(pib2,"VEB1002CORBR", "VEB1002CORCT", "VEB1002CORSA")
pib2<-read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/VEB1002CORBR/VEB1002CORCT/VEB1002CORSA')
pib2<- pib2 %>% pivot_wider(names_from='serie', values_from = 'dato')
pib2 <- select(pib2,"VEB1002CORBR", "VEB1002CORCT", "VEB1002CORSA")
pib2<-ts(pib2,start=c(2002,1),frequency = 4)
colnames(pib2) <- c('bruto','ciclo2','nosta')
grangertest(ipi2[,"datos_sa"], pib2[,"bruto"], order=1)
grangertest(ipi2[,"datos_sa"], pib2[,"ciclo"], order=2)
grangertest(ipi2[,"datos_sa"], pib2[,"nosta"], order=3)
grangertest(ipi2[,"datos_sa"], pib2[,"ciclo2"], order=2)
plot(pib2)
pib2<-read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/PIB10CORRBR/PIB10CORRCT/PIB10CORRSA')
colnames(pib2)
pib2<- pib2 %>% pivot_wider(names_from='serie', values_from = 'dato')
colnames(pib2)
pib2 <- select(pib2,"PIB10CORRBR", "PIB10CORRCT", "PIB10CORRSA")
colnames(pib2) <- c('bruto','ciclo2','nosta')
pib2<-ts(pib2,start=c(2002,1),frequency = 4)
grangertest(ipi2[,"datos_sa"], pib2[,"bruto"], order=1)
grangertest(ipi2[,"datos_sa"], pib2[,"ciclo2"], order=2)
grangertest(ipi2[,"datos_sa"], pib2[,"nosta"], order=3)
library(tseries)
serieNormal<-ts(rnorm(120),start=2000,frequency = 12)
plot(serieNormal)
test<-adf.test(serieNormal)
print(test)
rm(quantmod)
library(tseries)
serieNormal<-ts(rnorm(120),start=2000,frequency = 12)
plot(serieNormal)
test<-adf.test(serieNormal)
print(test)
remove.packages("quantmod")
library(tseries)
serieNormal<-ts(rnorm(120),start=2000,frequency = 12)
plot(serieNormal)
test<-adf.test(serieNormal)
print(test)
print(testInheritedMethods())
print(test['p-value'])
print(test)
?adf.test
print(test['p.value'])
print(test)
set.seed(23556)
tendest <- 50 +                 # y_0
1:80 * 0.25 +        # t * m
cumsum(rnorm(80))    # e_1 + e_2 + ... + e_t
tendest <- ts(tendest, start=c(2000,1), freq=4)
# no es estacionario
plot(tendest)
test<-adf.test(tendest)
print(test)
adf.test(pib2)
adf.test(ts(pib2, frequency = 4))
colnames(pib2)
adf.test(ts(pib2[,'bruto'], frequency = 4))
adf.test(ts(ipi[,'bruto'], frequency = 4))
ipi
veb
adf.test(ts(ipi[,'VEB1002CORBR'], frequency = 4))
ipi
adf.test(ts(veb[,'VEB1002CORBR'], frequency = 4))
adf.test(tendest,k=1)
library(tseries)
serieNormal<-ts(rnorm(120),start=2000,frequency = 12)
plot(serieNormal)
test<-adf.test(serieNormal)
?adf.test
print(test)
set.seed(23556)
tendest <- 50 +                 # y_0
1:80 * 0.25 +        # t * m
cumsum(rnorm(80))    # e_1 + e_2 + ... + e_t
tendest <- ts(tendest, start=c(2000,1), freq=4)
# no es estacionario
plot(tendest)
test<-adf.test(tendest)
print(test)
adf.test(tendest,k=1)
adf.test(tendest,k=3)
adf.test(tendest,k=1)
adf.test(tendest,k=1)
dif <- diff(tendest)
adf.test(diff)
adf.test(tendest,k=1)
dif <- diff(tendest)
adf.test(dif)
dif <- diff(tendest)
adf.test(dif)
adf.test(ts(pib2[,'ciclo2'], frequency = 4))
adf.test(ts(ipi[,'IPI21XE'], frequency = 4))
adf.test(ts(veb[,'VEB1002CORBR'], frequency = 4))
gasto <- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/GCFFORE24CORBR')
gasto <- read.csv('https://www.ige.gal/igebdt/igeapi/csv/datosserc/GCFFORE24CORBR')
gasto
adf.test(ts(gasto[,'dato'],frequency = 4))
set.seed(12345)
y       <- 50 +                  # y_0
1:100 * 0.8 +         # t * m
cumsum(rnorm(100))    # e_1 + e_2 + ... + e_t
x       <- 50 +                  # y_0
1:100 * 0.6 +         # t * m
cumsum(rnorm(100))    # e_1 + e_2 + ... + e_t
# representanse gráficamente
plot(y,col='blue',type='l',main="regresión espúrea")
lines(x,col='red')
legend("top",legend=c("y","x"),col=c("blue","red"),lty=1)
#ambas series presentan una raíz unitaria
adf.test(y)
adf.test(x)
#d# El grado de ajuste es próximo a 1
mco <- lm(y~x)
summary(mco)
# representación dos residuos
plot(mco$residuals)
# test de raiz unitaria para os residuos
adf.test(mco$residuals)
library(tidyverse)
#CONSUMO
consumo <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/GCFADRE24CORBR/GCFADRE24CORCT/GCFADRE24CORSA/GCFFORE24CORBR/GCFFORE24CORCT/GCFFORE24CORSA");
consumo <- pivot_wider(consumo, names_from="serie", values_from="dato")
consumo<-consumo%>%
arrange(codtempo)%>%
mutate(cons_br=GCFADRE24CORBR+GCFFORE24CORBR,
cons_tend=GCFADRE24CORCT+GCFFORE24CORCT,
cons_sa=GCFADRE24CORSA+GCFFORE24CORSA,.keep="none")
consumo_ts <- ts(consumo, start=c(1995,1), frequency = 4)
#PIB
pib<-read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/PIBRE24CORRBR/PIBRE24CORRCT/PIBRE24CORRSA")
pib<-pib%>%pivot_wider(names_from='serie',values_from='dato')%>%arrange(codtempo)
pib_ts<-ts(pib[,3:5],start=1995, frequency = 4)
colnames(pib_ts)<-c("pib_br","pib_tend","pib_sa")
# collemos anos pre-covid
consumo_ts <- window(consumo_ts, start=c(1995, 1), end=c(2019,4))
pib_ts <- window(pib_ts, start=c(1995, 1), end=c(2019,4))
# logaritmos
pib_log<-log(pib_ts)
cons_log<-log(consumo_ts)
# representanse gráficamente
plot(cons_log[,"cons_br"],col='blue',type='l',main="Consumo final e PIB",ylim=c(15,17))
lines(pib_log[,"pib_br"],col='red')
legend("bottomright",legend=c("log(consumo)","log(pib)"),col=c("blue","red"),lty=1)
#f_4# Ambas presentan raíces unitarias
adf.test(pib_log[,"pib_br"])
adf.test(cons_log[,"cons_br"])
datos<-ts.union(cons_log,pib_log)
colnames(datos)<-c(colnames(cons_log),colnames(pib_log))
mco <- lm(cons_br~ pib_br,datos)
residuos<-mco$residuals
plot(residuos)
adf.test(residuos)
library(tidyverse)
#CONSUMO
consumo <- read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/GCFADRE24CORBR/GCFADRE24CORCT/GCFADRE24CORSA/GCFFORE24CORBR/GCFFORE24CORCT/GCFFORE24CORSA");
consumo <- pivot_wider(consumo, names_from="serie", values_from="dato")
consumo<-consumo%>%
arrange(codtempo)%>%
mutate(cons_br=GCFADRE24CORBR+GCFFORE24CORBR,
cons_tend=GCFADRE24CORCT+GCFFORE24CORCT,
cons_sa=GCFADRE24CORSA+GCFFORE24CORSA,.keep="none")
consumo_ts <- ts(consumo, start=c(1995,1), frequency = 4)
#PIB
pib<-read.csv("https://www.ige.gal/igebdt/igeapi/csv/datosserc/PIBRE24CORRBR/PIBRE24CORRCT/PIBRE24CORRSA")
pib<-pib%>%pivot_wider(names_from='serie',values_from='dato')%>%arrange(codtempo)
pib_ts<-ts(pib[,3:5],start=1995, frequency = 4)
colnames(pib_ts)<-c("pib_br","pib_tend","pib_sa")
# collemos anos pre-covid
consumo_ts <- window(consumo_ts, start=c(1995, 1), end=c(2019,4))
pib_ts <- window(pib_ts, start=c(1995, 1), end=c(2019,4))
